version: '3'
services:
  service:
    build: movies_admin
    expose:
      - "8000"
    volumes:
      - static_data:/opt/app/data/
    env_file:
      - ./.env

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - static_data:/data/:ro
    depends_on:
      - service
    ports:
      - "80:80"

  db:
    image: postgres:13.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "54321:5432"

    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  # Elasticsearch Docker Images: https://www.docker.elastic.co/
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.5.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  etl:
    build: etl_process
    env_file:
      - ./.env
    depends_on:
      - elasticsearch
      - db

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"

  fastapi:
    build:
      context: ./../../../Async_API_sprint_1/fastapi-solution
    env_file: ./.env
    depends_on:
      - "redis"
    ports:
      - "8001:8001"

volumes:
  postgres_data:
  static_data:
  elasticsearch-data:
    driver: local